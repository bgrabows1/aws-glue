---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Cloudformation template for AWS RDS Aurora database.

Parameters:
  AuroraDBName:
    Description: Aurora database name.
    MaxLength: 64
    MinLength: 1
    NoEcho: false
    Type: String
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  AuroraDBUsername:
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Must begin with a letter and contain a minimum of 4 alphanumeric characters."
    Default: auradmin
    Description: Enter database Admin username for Aurora.
    MaxLength: 16
    MinLength: 4
    NoEcho: false
    Type: String
  AuroraDBPassword:
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: "Must contain only alphanumeric characters with minimum of 8 characters."
    Default: auradmin123
    Description: Enter password for Aurora Admin user.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  AuroraDBInstanceType:
    AllowedValues:
      - db.t2.small
      - db.t2.medium
    Default: db.t2.small
    Description: Choose the DB instance class that allocates the computational, network, and memory capacity
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Database Configuration
        Parameters:
          - AuroraDBName
          - AuroraDBInstanceType
          - AuroraDBUsername
          - DatabasePassword
    ParameterLabels:
      AuroraDBName:
        default: Database Cluster Name
      AuroraDBInstanceType:
        dafault: Database Instance Type
      AuroraDBUsername:
        default: Database Username
      AuroraDBPassword:
        default: Database Password
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 172.24.0.0/16
    Private1:
      CIDR: 172.24.0.0/24
    Private2:
      CIDR: 172.24.1.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - VPC
        - CIDR
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref AuroraDBName, "vpc"]]
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Private1
        - CIDR
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref AuroraDBName, "private-subnet-1"]]
      - Key: Network
        Value: Private1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - Private2
        - CIDR
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref AuroraDBName, "private-subnet-2"]]
      - Key: Network
        Value: Private2
  AuroraSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Aurora security group."
      VpcId:
        Ref: VPC
  AuroraSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: AuroraSecurityGroup
    Properties:
      GroupId: !Ref AuroraSecurityGroup
      IpProtocol: tcp
      FromPort: "3306"
      ToPort: "3306"
      CidrIp:
        Fn::FindInMap:
        - SubnetConfig
        - VPC
        - CIDR
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: CloudFormation managed DB subnet group.
      SubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
  RDSDBClusterParameterGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Parameters:
        character_set_database: "utf32"
      Family: aurora5.6
      Description: "A parameter group for aurora db."
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DatabaseName: !Ref AuroraDBName
      DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Engine: aurora
      MasterUserPassword: !Ref AuroraDBPassword
      MasterUsername: !Ref AuroraDBUsername
      Tags:
        - Key: Application
          Value: !Ref AWS::StackId
      VpcSecurityGroupIds:
        - Ref: AuroraSecurityGroup
    DeletionPolicy: Snapshot
  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: !Ref AuroraDBInstanceType
      PubliclyAccessible: false
      Engine: "aurora"

Outputs:
  JDBCAuroraConnectionString:
    Description: JDBC connection string for the database
    Value: !Join ['', ['jdbc:mysql://', !GetAtt [AuroraInstance, Endpoint.Address], ':', !GetAtt [
            AuroraInstance, Endpoint.Port], /, !Ref AuroraDBName]]
    Export:
      Name: !Sub "${AWS::StackName}-Aurora-JDBC"

  VPCId:
    Description: Aurora VPC identifier
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-Aurora-VPCID"
