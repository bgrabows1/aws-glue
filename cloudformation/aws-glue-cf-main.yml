---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Cloudformation template for AWS Glue resource and integration with other AWS
  resources like Athena, S3 and RDS.

Parameters:
# The name of the crawler to be created
  CrawlerName:
    Type: String
    Description: A crawler name.
  CrawlerDatabaseName:
    Type: String
    Description: Container for crawler metadata tables.
  TablePrefixName:
    Type: String
    Description: Table prefix name.

Resources:
  AWSGlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSGlueServiceRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: "GlueServiceRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Resource: "*"
                Action:
                  - "glue:*"
                  - "s3:GetBucketLocation"
                  - "s3:ListBucket"
                  - "s3:ListAllMyBuckets"
                  - "s3:GetBucketAcl"
                  - "ec2:DescribeVpcEndpoints"
                  - "ec2:DescribeRouteTables"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcAttribute"
                  - "iam:ListRolePolicies"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "cloudwatch:PutMetricData"
              -
                Effect: "Allow"
                Resource: "arn:aws:s3:::aws-glue-*"
                Action:
                  - "s3:CreateBucket"
              -
                Effect: "Allow"
                Resource:
                  - "arn:aws:s3:::aws-glue-*/*"
                  - "arn:aws:s3:::*/*aws-glue-*/*"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
              -
                Effect: "Allow"
                Resource:
                  - "arn:aws:s3:::crawler-public*"
                  - "arn:aws:s3:::aws-glue-*"
                Action:
                  - "s3:GetObject"
              -
                Effect: "Allow"
                Resource: "arn:aws:logs:*:*:/aws-glue/*"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:AssociateKmsKey"
              -
                Effect: "Allow"
                Resource:
                  - "arn:aws:ec2:*:*:network-interface/*"
                  - "arn:aws:ec2:*:*:security-group/*"
                  - "arn:aws:ec2:*:*:instance/*"
                Action:
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                Condition:
                  ForAllValues:StringEquals:
                    aws:TagKeys:
                      - "aws-glue-service-resource"

  CrawlerDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref CrawlerDatabaseName
        Description: "AWS Glue container to hold metadata tables for the crawler"
  Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CrawlerName
      Role: !GetAtt AWSGlueServiceRole.Arn
      #Classifiers: none, use the default classifier
      Description: AWS Glue crawler to crawl data
      #Schedule: none, use default run-on-demand
      DatabaseName: !Ref CrawlerDatabaseName
      Targets:
        S3Targets:
          # Public S3 bucket with the data
          - Path: "s3://tbd"
      TablePrefix: !Ref TablePrefixName
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
